#include <iostream>
class A
{
    int x;

public:
    A(void) // constructor generated by compiler if we donot create a constructor by ourself.
    {
    }
    void display()
    {
        std::cout << x << "\n";
    }
};
class B
{
    int x;

public:
    B(void) //Default constructor, known as default bcoz there is no parameter so,all objects will be initialized with same value .
    {
        x = 5;
    }
    void display()
    {
        std::cout << x << "\n";
    }
};
class C
{
    int x;

public:
    C(const int a = 50) //parameterized constructor with default argument, bcoz there is no actual parameter at the function call, so,all objects will be initialized with same default argument value. .
    {
        x = a;
    }
    void display()
    {
        std::cout << x << "\n";
    }
};
class D
{
    int x;

public:
    D(int a) //parameterized constructor, which will get a value passed during function call.
    {
        x = a;
    }
    void display()
    {
        std::cout << x << "\n";
    }
};

int main()
{
    class A a; //= A();
    a.display();
    class B b = B();
    b.display();
    class C c = C();
    c.display();
    class D d = D(100);
    d.display();
    std::cout << '\n';
    return 0;
}
